let n = number of years read
let d = avg. # of deaths per year
let c = number of causes of death
let a = number of ages

1968|..|1968
|> List.map (fun y -> y         n *
  |> read_age_and_cod_from_file   d +
  |> group_by_cod                 d +
  |> generate_age_counts          d +
  |> remove_invalid_ages)         a +
|> group_by_cause               n * c
|> sum_years                    n * c * n
|> normalize_counts             c * (a + a)
|> fill_missing_years           c * a
|> sort_counts                  c * alog(a) (assuming good sorting routine)
|> pmfs_to_json                 c * a
|> json_to_string               c * a (probably, recursive)
|~~> fname;;

total:
  n(3d+a) + nc + nnc + 5ca + calog(a)

given
  n = 45
  d = 2e6
  c = 20
  a = 120

total number of "operations" is likely in the ballpark of:
  270,000,000
which is pretty damn impressive considering we're reading 100m+ lines of data


